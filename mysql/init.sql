drop database student_dashboard;
create database student_dashboard CHARACTER SET utf8;
grant all on student_dashboard.* to student_dashboard_user@'localhost' identified by 'student_dashboard_password';
grant all on student_dashboard.* to student_dashboard_user@'127.0.0.1' identified by 'student_dashboard_password';
flush privileges;

use student_dashboard;

CREATE TABLE IF NOT EXISTS ACADEMIC_TERMS (
  TERM_ID    INT UNSIGNED NOT NULL AUTO_INCREMENT,
  NAME       CHAR(255)    NOT NULL DEFAULT '',
  START_DATE TIMESTAMP    DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  END_DATE   TIMESTAMP    DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY  (TERM_ID)
);

CREATE TABLE IF NOT EXISTS COURSE (
  ID      CHAR(255)      NOT NULL,
  TERM_ID INT UNSIGNED    NOT NULL DEFAULT 1,
  NAME    CHAR(255)      NOT NULL DEFAULT '',
  PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS FILE_ACCESS (
  FILE_ID      CHAR(255)      NOT NULL,
  USER_ID      CHAR(255)      NOT NULL DEFAULT '',
  ACCESS_TIME  TIMESTAMP      NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS FILE (
  ID      CHAR(255)      NOT NULL,
  NAME      CHAR(255)    NOT NULL DEFAULT '',
  COURSE_ID    CHAR(255)      NOT NULL,
  PRIMARY KEY  (ID)
);

CREATE TABLE IF NOT EXISTS USER (
  ID      CHAR(255)      NOT NULL,
  NAME      CHAR(255)    NOT NULL DEFAULT '',
  SIS_ID  CHAR(255),
  SIS_NAME  CHAR(255),
  COURSE_ID CHAR(255),
  CURRENT_GRADE    CHAR(255),
  FINAL_GRADE    CHAR(255),
  PRIMARY KEY  (ID)
);

CREATE TABLE IF NOT EXISTS ASSIGNMENT_GROUPS(
   ID         CHAR(255)    NOT NULL,
   NAME       CHAR(255)    NOT NULL DEFAULT '',
   WEIGHT     CHAR(255),
   GROUP_POINTS     CHAR(255),
   COURSE_ID  CHAR(255)    NOT NULL,
   PRIMARY KEY  (ID)
);

CREATE TABLE IF NOT EXISTS ASSIGNMENT(
  ID  CHAR(255)    NOT NULL,
  NAME CHAR(255)    NOT NULL DEFAULT '',
  DUE_DATE TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  LOCAL_DATE TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  POINTS_POSSIBLE CHAR(255),
  COURSE_ID  CHAR(255)    NOT NULL,
  ASSIGNMENT_GROUP_ID CHAR(255) NOT NULL,
  PRIMARY KEY  (ID)
);

CREATE TABLE IF NOT EXISTS SUBMISSION(
 ID  CHAR(255)    NOT NULL,
 ASSIGNMENT_ID  CHAR(255)    NOT NULL,
 USER_ID  CHAR(255)    NOT NULL,
 SCORE CHAR(255),
 GRADED_DATE TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
 LOCAL_GRADED_DATE TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
 PRIMARY KEY  (ID)
);

CREATE TABLE IF NOT EXISTS ASSIGNMENT_WEIGHT_CONSIDERATION(
COURSE_ID CHAR(255) NOT NULL,
CONSIDER_WEIGHT BOOLEAN DEFAULT FALSE,
PRIMARY KEY (COURSE_ID)
);

-- insert terms
INSERT INTO ACADEMIC_TERMS (NAME, START_DATE, END_DATE) VALUES ('SUMMER 2018', '2018-06-27 04:00:00',  '2018-08-17 23:59:59' );
INSERT INTO ACADEMIC_TERMS (NAME, START_DATE, END_DATE) VALUES ('FALL 2018', '2018-09-04 04:00:00',  '2018-12-24 23:59:59' );
-- inert course
INSERT INTO COURSE (ID, NAME, TERM_ID) VALUES ('17700000000230745', 'STATS 250 SU 2018', 1);
INSERT INTO COURSE (ID, NAME, TERM_ID) VALUES ('17700000000252307', 'SI 110 001 FA 2018', 2);

COMMIT;