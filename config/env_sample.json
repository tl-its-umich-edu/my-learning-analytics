{
    "/*  Required to set this with some value": "*/",
    "/*  Run the code here to generate https://raw.githubusercontent.com/openwisp/ansible-openwisp2/master/files/generate_django_secret_key.py": "*/",
    "DJANGO_SECRET_KEY": "<Generate Secret Key>",
    "/*  Set the Timezone for the container (must rebuild if changed)": "*/",
    "TZ": "America/Detroit",
    "/*  CSV List of hosts allowed, no spaces in between commas": "*/",
    "ALLOWED_HOSTS": [
        "127.0.0.1",
        "localhost"
    ],
    "/* The URL of a generic help or documentation site, to be used in the front end's drop-down menu": "*/",
    "HELP_URL": "https://its.umich.edu/academics-research/teaching-learning/my-learning-analytics",
    "/* Help for views. Specify URLs to overide defaults": "*/",
    "/* URL_VIEW_RESOURCES_ACCESSED": "*/",
    "/* URL_VIEW_ASSIGNMENT_PLANNING_V1": "*/",
    "/* URL_VIEW_ASSIGNMENT_PLANNING": "*/",
    "/* URL_VIEW_GRADE_DISTRIBUTION": "*/",
    "/*  ID for your Google Analytics, defaults to nothing/disabled": "*/",
    "GA_ID": "",
    "/* # The hex value to be used in the front end for the primary color of the palette and theme": "*/",
    "PRIMARY_UI_COLOR": "#00274C",
    "/* Configuration of CSP see https://django-csp.readthedocs.io/en/latest/configuration.html": "*/",
    "/* To enable this at all you must set have the CSP key set": "*/",
    "/* and REPORT_ONLY should be be false, otherwise it will just console Warn": "*/",
    "CSP": {
        "REPORT_ONLY": true,
        "/* You should set your domain as the DEFAULT_SRC": "*/",
        "DEFAULT_SRC": ["'self'","example.edu"],
        "SCRIPT_SRC": ["'self'", "'unsafe-inline'", "'unsafe-eval'", "www.google-analytics.com"],
        "IMG_SRC": ["'self'", "data:", "www.google-analytics.com"],
        "OBJECT_SRC": [],
        "MEDIA_SRC": [],
        "/* If you're embedding in Canvas you may need to include instructure.com as FRAME_SRC": "*/",
        "FRAME_SRC": [],
        "FONT_SRC": ["'self'", "fonts.gstatic.com"],
        "CONNECT_SRC": [],
        "STYLE_SRC": ["'self'", "'unsafe-inline'"],
        "BASE_URI": [],
        "FRAME_ANCESTORS": [],
        "FORM_ACTION": [],
        "SANDBOX": [],
        "REPORT_URI": [],
        "MANIFEST_SRC": [],
        "WORKER_SRC": [],
        "PLUGIN_TYPES": [],
        "REQUIRE_SRI_FOR": [],
        "UPGRADE_INSECURE_REQUESTS": false,
        "BLOCK_ALL_MIXED_CONTENT": false,
        "INCLUDE_NONCE_IN": []
    },
    "/*  default password length indicator incase of creating user from command line or LTI auto login": "*/",
    "RANDOM_PASSWORD_DEFAULT_LENGTH": 32,
    "/*  Enable secure cookies, also set your trusted origin (example of instructure.com)": "*/",
    "CSRF_COOKIE_SECURE": false,
    "CSRF_TRUSTED_ORIGINS": ["instructure.com"],
    "/*  SameSite settings for Session and CSRF (defaults in settings.py should work), if you do want non-string None set to null.": "*/",
    "SESSION_COOKIE_SAMESITE": "None",
    "CSRF_COOKIE_SAMESITE": "None",
    "/*  Any logs that django outputs, turn these off for production": "*/",
    "DJANGO_LOG_LEVEL": "DEBUG",
    "DJANGO_DEBUG": true,
    "DJANGO_TEMPLATE_DEBUG": true,
    "/*  Any other logs": "*/",
    "ROOT_LOG_LEVEL": "INFO",
    "/*  How long to cache some URL's on the client (Defualt 3600 seconds)": "*/",
    "/*  CLIENT_CACHE_TIME=3600": "*/",
    "/*  MySQL Configuration": "*/",
    "MYSQL": {
        "/*  Mysql Django Engine name": "*/",
        "ENGINE": "django.db.backends.mysql",
        "/*  Local database name": "*/",
        "NAME": "student_dashboard",
        "/*  Local database user": "*/",
        "USER": "student_dashboard_user",
        "/*  Local database password": "*/",
        "PASSWORD": "student_dashboard_pw",
        "/*  Local database host": "*/",
        "HOST": "student_dashboard_mysql",
        "/*  Local database port": "*/",
        "PORT": 3306,
        "/*  Local database root password (optional)": "*/",
        "ROOT_PASSWORD": "student_dashboard_root_pw"
    },
    "/*  Default Canvas Data id increment for course id, user id, etc": "*/",
    "CANVAS_DATA_ID_INCREMENT": 17700000000000000,
    "/*  Canvas Configuration": "*/",
    "CANVAS_USER": "",
    "/*  strings for construct file download url": "*/",
    "CANVAS_FILE_PREFIX": "https://example.instructure.com/files/",
    "CANVAS_FILE_POSTFIX": "/download?download_frd=1",
    "/*  Paths to special login credentials (uses SAML)": "*/",
    "GOOGLE_APPLICATION_CREDENTIALS": "/secrets/bq_cred.json",
    "/*  LTI Configuration": "*/",
    "/*  LTI is disabled by default": "*/",
    "STUDENT_DASHBOARD_LTI": false,
    "/*  LTI 1.3 configuration":"*/",
    "/*  The first key of LTI_CONFIG is the Canvas URL (production, beta, or test)":"*/",
    "LTI_CONFIG": {
        "https://canvas.instructure.com": [
            {
                "/*The default set of variables for LTI validation":"*/",
                "default": true,
                "/*LTI Dev Key from Canvas":"*/",
                "client_id": "17700000000000111",
                "/*Allowed hosts for the following 3 URLs: canvas.instructure.com, canvas.beta.instructure.com, canvas.test.instructure.com":"*/",
                "auth_login_url": "https://canvas.instructure.com/api/lti/authorize_redirect",
                "auth_token_url": "https://canvas.instructure.com/login/oauth2/token",
                "key_set_url": "https://canvas.instructure.com/api/lti/security/jwks",
                "key_set":null,
                "/*Tools private key for LTI validation":"*/",
                "private_key_file": "/secrets/private.key",
                "/*Tools public key for LTI validation":"*/",
                "public_key_file": "/secrets/public.key",
                "/*Tools installation id in platform":"*/",
                "deployment_ids": ["27297:7db438071375c02373713c12c73869ff2f470b68"]
            }
        ]
    },
    "/*Full path in container to LTI config template.  If unset or null, defaults to location of 'config/lti_config_template.json' (usually '/code/assets/config/lti_config_template.json' in container)":"*/",
    "LTI_CONFIG_TEMPLATE_PATH": null,
    "/*Disable deployment id validation check for LTI launches.":"*/",
    "LTI_CONFIG_DISABLE_DEPLOYMENT_ID_VALIDATION": false,
    "/*Database caching using mysql cache for ltiv1p3":"*/",
    "DB_CACHE_CONFIGS": {
        "/*cache timeout":"*/",
        "CACHE_TTL": 7200,
        "/*Cache type":"*/",
        "BACKEND": "django_mysql.cache.MySQLCache",
        "/*cache tablename as stated in the 0018_adding_mysql_cache migration file":"*/",
        "LOCATION": "django_myla_cache",
        "CACHE_KEY_PREFIX": "myla",
        "CACHE_OPTIONS": {"COMPRESS_MIN_LENGTH": 5000, "COMPRESS_LEVEL": 6}
    },
    "/*  Set this to true to enable the backend login/logout URLs.": "*/",
    "/*  This is enabled by default if no external auth is enabled.": "*/",
    "ENABLE_BACKEND_LOGIN": false,
    "/*  SAML Configuration": "*/",
    "/*  Set this to true if you plan to use SAML and then configure it": "*/",
    "STUDENT_DASHBOARD_SAML": false,
    "/*  Where your local secrets are stored": "*/",
    "SAML2_FILES_BASE": "/secrets/saml/",
    "/* Location of remote metadata for SAML": "*/",
    "SAML2_REMOTE_METADATA": "",
    "/* Local location of pem file that goes with the metadata": "*/",
    "SAML2_REMOTE_PEM_FILE": "",
    "/*  Base for Django to your accounts path": "*/",
    "DJANGO_SAML2_URL_BASE": "http://localhost:5001/accounts/",
    "/*  ACS Redirect": "*/",
    "DJANGO_ACS_DEFAULT_REDIRECT": "http://localhost:5001/",
    "/*  Login Redirect (If SAML enabled)": "*/",
    "DJANGO_LOGIN_REDIRECT_URL": "http://localhost:5001/",
    "/*  Logout redirect (If SAML enabled)": "*/",
    "/*  This URL should be configured to the logout URL on SAML host": "*/",
    "DJANGO_LOGOUT_REDIRECT_URL": "http://localhost:5001/",
    "/*  Optional token value to be used for token based authentication": "*/",
    "DJANGO_WATCHMAN_TOKEN": "",
    "/*  A single default IDP to use if multiple are present in the SAML metadata (Get from Metadata)": "*/",
    "DJANGO_SAML2_DEFAULT_IDP": "",
    "/*  CRON POD SETTINGS": "*/",
    "/* ": "*/",
    "/*  All of these settings go together and need to be enabled for cron job": "*/",
    "/*  Uncomment all of these to run the cron": "*/",
    "/*  set this to be true on OpenShift pod for running cron job.": "*/",
    "/*  RUN_AT_TIMES and CRONTAB_SCHEDULE have no affect otherwise.": "*/",
    "IS_CRON_POD": false,
    "/*  Time to run cron CSV separated times in HH:MM format.": "*/",
    "/*  An example is 02:00,04:00 to run at 2AM and 4AM": "*/",
    "RUN_AT_TIMES": "",
    "/*  Time to run system cron": "*/",
    "/*  An example to match the above would be 0 2,4 * * *": "*/",
    "/*  This should run as frequently or more frequently than RUN_AT_TIMES": "*/",
    "/*  Use https://crontab.guru to validate your schedule": "*/",
    "CRONTAB_SCHEDULE": "",
    "/*  How many values to pass to big query at a time in one run. This is configurable as I don't know what a max safe value is.": "*/",
    "/*  CRON_BQ_IN_LIMIT=20": "*/",
    "/*  Change this to set the max default weeks to allow. Default is currently 16. The issue is the end dates in Canvas currently are set 10 years out so it can't calculate the range.": "*/",
    "/*  MAX_DEFAULT_WEEKS=16": "*/",
    "/*  DEBUGGER SETTINGS": "*/",
    "/*  Enable Visual Studio Debugging Support (Default False)": "*/",
    "/*  You must also configure the following options": "*/",
    "DEBUGPY_ENABLE": false,
    "/*  Port to run DEBUGPY on": "*/",
    "DEBUGPY_REMOTE_PORT": 3000,
    "/*  Address to listen for DEBUGPY on": "*/",
    "DEBUGPY_ADDRESS": "0.0.0.0",
    "/*  Whether or not to wait for debugpy (formerly ptvsd) to attach before continuing (Default False)": "*/",
    "DEBUGPY_WAIT_FOR_ATTACH": false,
    "/*  Control course view options globally": "*/",
    "/*  Current possible values are a CSV list of any/none/all of show_resources_accessed, show_assignment_planning, show_grade_distribution": "*/",
    "/*  By default this is empty and no views are disabled": "*/",
    "/* options are as described in course_view_options table column names [\"show_assignment_planning\", \"show_grade_distribution\"]": "*/",
    "VIEWS_DISABLED": "",
    "/*  Data Warehouse configuration": "*/",
    "/*  Uncomment these variables and fill them in if you're using cron to load": "*/",
    "/*  from a data warehouse. These are optional": "*/",
    "/*  Database engine driver": "*/",
    "DATA_WAREHOUSE": {
        "ENGINE": "django.db.backends.postgresql",
        "/*  database name": "*/",
        "NAME": "",
        "/*  database user": "*/",
        "USER": "",
        "/*  database password": "*/",
        "PASSWORD": "",
        "/*  database host": "*/",
        "HOST": "",
        "/*  database port": "*/",
        "PORT": 5432,
        "/*  Enable/Disable Unizin Date Warehouse specific features/data": "*/",
        "IS_UNIZIN": true
    },
    "/*  Learning Record Store configuration": "*/",
    "LRS": {
        "/*  LRS database engine driver (use `google.cloud.bigquery` for bigquery). no other LRS settings needed": "*/",
        "ENGINE": "google.cloud.bigquery",
        "/*  LRS database name": "*/",
        "NAME": "",
        "/*  LRS database user": "*/",
        "USER": "",
        "/*  LRS database password": "*/",
        "PASSWORD": "",
        "/*  LRS database host": "*/",
        "HOST": "",
        "/*  LRS database port": "*/",
        "PORT": 5432,
        "/*  LRS database options": "*/",
        "OPTIONS": {}
    },
    "/* Use the LRS data source instead of bigquery (default: false)": "/*",
    "/* resource type for resource view add or remove per institution needs": "/*",
    "RESOURCE_VALUES": {
        "files":  {"types": ["canvas"], "icon": "fas fa-file fa-lg"},
        "videos": {"types": [""], "icon": "fas fa-video fa-lg"}
    },
    "/* Institute specific urls add or remove to your needs, will be used for Resources view": "*/",
    "/*cron queries to pull the data from various caliper data sources replace if not relevant with your institution": "*/",
    "RESOURCE_ACCESS_CONFIG": {
        "canvas": {
            "query": [
                "SELECT 'canvas' AS resource_type, ",
                "CAST(SUBSTR(JSON_EXTRACT_SCALAR(event, '$.object.id'), 35) AS STRING) AS resource_id, ",
                "CAST(SUBSTR(JSON_EXTRACT_SCALAR(event, '$.membership.member.id'), 29) AS INT64) AS user_id, ",
                "cast(null as string) AS user_login_name,",
                "CAST(SUBSTR(JSON_EXTRACT_SCALAR(event, '$.group.id'), 31) AS INT64) AS course_id, ",
                "COALESCE(",
                "JSON_EXTRACT_SCALAR(event, '$.object.extensions[\\'com.instructure.canvas\\'].asset_name'), ",
                "JSON_EXTRACT_SCALAR(event, '$.object.extensions[\\'com.instructure.canvas\\'].filename'), ",
                "JSON_EXTRACT_SCALAR(event, '$.object.name'), ",
                "'attachment'",
                ") as name, ",
                "datetime(EVENT_TIME) as access_time ",
                "FROM event_store.events ",
                "where JSON_EXTRACT_SCALAR(event, '$.edApp.id') IN ",
                "UNNEST(['http://m.canvas.umich.edu/' , 'http://umich.instructure.com/' ]) ",
                "and type = 'NavigationEvent' ",
                "and SUBSTR(JSON_EXTRACT_SCALAR(event, '$.object.id'), 24, 10) = 'attachment' ",
                "and JSON_EXTRACT_SCALAR(event, '$.action') = 'NavigatedTo' ",
                "and JSON_EXTRACT_SCALAR(event, '$.membership.member.id') is not null ",
                "and SUBSTR(JSON_EXTRACT_SCALAR(event, '$.group.id'), 31) IN UNNEST(@course_ids) "
            ],
            "app_display_name": "Canvas Files",
            "canvas_course_id_format": "LONG",
            "urls": {"prefix": "https://example.instructure.com/files/", "postfix": "/download?download_frd=1"}
        }
    },
    "/* Disable/Enable courses_enabled api": "*/",
    "COURSES_ENABLED" : false
}
